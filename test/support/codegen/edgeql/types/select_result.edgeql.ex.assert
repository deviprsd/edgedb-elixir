# AUTOGENERATED: DO NOT MODIFY
# Generated by Elixir client for EdgeDB via `mix edgedb.generate` from
#   `test/support/codegen/edgeql/types/select_result.edgeql`.
defmodule Tests.Codegen.Queries.Types.SelectResult do
  @query """
  select codegen::Result {
      # special
      id,

      # properties

      # string

      rp_str,
      op_str,
      mp_str,

      rp_str_type,
      op_str_type,
      mp_str_type,

      # boolean

      rp_bool,
      op_bool,
      mp_bool,

      rp_bool_type,
      op_bool_type,
      mp_bool_type,

      # number

      rp_int16,
      op_int16,
      mp_int16,

      rp_int16_type,
      op_int16_type,
      mp_int16_type,

      rp_int32,
      op_int32,
      mp_int32,

      rp_int32_type,
      op_int32_type,
      mp_int32_type,

      rp_int64,
      op_int64,
      mp_int64,

      rp_int64_type,
      op_int64_type,
      mp_int64_type,

      rp_float32,
      op_float32,
      mp_float32,

      rp_float32_type,
      op_float32_type,
      mp_float32_type,

      rp_float64,
      op_float64,
      mp_float64,

      rp_float64_type,
      op_float64_type,
      mp_float64_type,

      rp_decimal,
      op_decimal,
      mp_decimal,

      rp_decimal_type,
      op_decimal_type,
      mp_decimal_type,

      # json

      rp_json,
      op_json,
      mp_json,

      rp_json_type,
      op_json_type,
      mp_json_type,

      # uuid

      rp_uuid,
      op_uuid,
      mp_uuid,

      rp_uuid_type,
      op_uuid_type,
      mp_uuid_type,

      # enum

      rp_enum,
      op_enum,
      mp_enum,

      # date/time

      rp_datetime,
      op_datetime,
      mp_datetime,

      rp_datetime_type,
      op_datetime_type,
      mp_datetime_type,

      rp_duration,
      op_duration,
      mp_duration,

      rp_duration_type,
      op_duration_type,
      mp_duration_type,

      rp_cal_local_datetime,
      op_cal_local_datetime,
      mp_cal_local_datetime,

      rp_cal_local_datetime_type,
      op_cal_local_datetime_type,
      mp_cal_local_datetime_type,

      rp_cal_local_date,
      op_cal_local_date,
      mp_cal_local_date,

      rp_cal_local_date_type,
      op_cal_local_date_type,
      mp_cal_local_date_type,

      rp_cal_local_time,
      op_cal_local_time,
      mp_cal_local_time,

      rp_cal_local_time_type,
      op_cal_local_time_type,
      mp_cal_local_time_type,

      rp_cal_relative_duration,
      op_cal_relative_duration,
      mp_cal_relative_duration,

      rp_cal_relative_duration_type,
      op_cal_relative_duration_type,
      mp_cal_relative_duration_type,

      rp_cal_date_duration,
      op_cal_date_duration,
      mp_cal_date_duration,

      rp_cal_date_duration_type,
      op_cal_date_duration_type,
      mp_cal_date_duration_type,

      # array

      rp_array_int64,
      op_array_int64,
      mp_array_int64,

      # tuple

      rp_tuple_int64_int64,
      op_tuple_int64_int64,
      mp_tuple_int64_int64,

      rp_named_tuple_x_int64_y_int64,
      op_named_tuple_x_int64_y_int64,
      mp_named_tuple_x_int64_y_int64,

      # range

      rp_range_int32,
      op_range_int32,
      mp_range_int32,

      rp_range_int64,
      op_range_int64,
      mp_range_int64,

      rp_range_float32,
      op_range_float32,
      mp_range_float32,

      rp_range_float64,
      op_range_float64,
      mp_range_float64,

      rp_range_decimal,
      op_range_decimal,
      mp_range_decimal,

      rp_range_datetime,
      op_range_datetime,
      mp_range_datetime,

      rp_range_cal_local_datetime,
      op_range_cal_local_datetime,
      mp_range_cal_local_datetime,

      rp_range_cal_local_date,
      op_range_cal_local_date,
      mp_range_cal_local_date,

      # bytes

      rp_bytes,
      op_bytes,
      mp_bytes,

      rp_bytes_type,
      op_bytes_type,
      mp_bytes_type,

      # sequence

      rp_sequence,
      op_sequence,
      mp_sequence,

      # config

      rp_cfg_memory,
      op_cfg_memory,
      mp_cfg_memory,

      rp_cfg_memory_type,
      op_cfg_memory_type,
      mp_cfg_memory_type,

      # links

      rl_f: {
          # special

          id,

          # properties

          rp_a_str,
          rp_b_str,
          rp_c_str,
          rp_d_str,
          rp_f_str,

          # links

          ol_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ml_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ol_a_b: {
              id,
          },

          ml_a_b: {
              id,
          },
      },

      ol_f: {
          # special

          id,

          # properties

          rp_a_str,
          rp_b_str,
          rp_c_str,
          rp_d_str,
          rp_f_str,

          # links

          ol_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ml_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ol_a_b: {
              id,
          },

          ml_a_b: {
              id,
          },
      },

      ml_f: {
          # special

          id,

          # properties

          rp_a_str,
          rp_b_str,
          rp_c_str,
          rp_d_str,
          rp_f_str,

          # links

          ol_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ml_a: {
              id,
              rp_a_str,
              rp_e_str,
          },

          ol_a_b: {
              id,
          },

          ml_a_b: {
              id,
          },
      },

      rl_lp_f: {
          id,

          # link properties

          @olp_a,
      }
  }
  filter .id in array_unpack(<array<uuid>>$ids)
  """

  @moduledoc """
  Generated module for the EdgeQL query from
    `test/support/codegen/edgeql/types/select_result.edgeql`.

  Query:

  ```edgeql
  #{@query}
  ```
  """

  @query_file "test/support/codegen/edgeql/types/select_result.edgeql"

  @typedoc """
  ```edgeql
  std::uuid
  ```
  """
  @type uuid() :: binary()

  @typedoc """
  ```edgeql
  std::json
  ```
  """
  @type json() :: any()

  @typedoc """
  ```edgeql
  std::duration
  ```
  """
  @type duration() :: Timex.Duration.t() | integer()

  @typedoc """
  ```edgeql
  scalar type codegen::UuidType extending std::uuid
  ```
  """
  @type codegen__uuid_type() :: binary()

  @typedoc """
  ```edgeql
  scalar type codegen::StrType extending std::str
  ```
  """
  @type codegen__str_type() :: String.t()

  @typedoc """
  ```edgeql
  scalar type codegen::SequenceType extending std::int64
  ```
  """
  @type codegen__sequence_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::JsonType extending std::json
  ```
  """
  @type codegen__json_type() :: any()

  @typedoc """
  ```edgeql
  scalar type codegen::Int64Type extending std::int64
  ```
  """
  @type codegen__int64_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Int32Type extending std::int32
  ```
  """
  @type codegen__int32_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Int16Type extending std::int16
  ```
  """
  @type codegen__int16_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Float64Type extending std::float64
  ```
  """
  @type codegen__float64_type() :: float()

  @typedoc """
  ```edgeql
  scalar type codegen::Float32Type extending std::float32
  ```
  """
  @type codegen__float32_type() :: float()

  @typedoc """
  ```edgeql
  scalar type codegen::EnumType extending enum<A, B, C>
  ```
  """
  @type codegen__enum_type() :: String.t() | :A | :B | :C

  @typedoc """
  ```edgeql
  scalar type codegen::DurationType extending std::duration
  ```
  """
  @type codegen__duration_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::DecimalType extending std::decimal
  ```
  """
  @type codegen__decimal_type() :: Decimal.t()

  @typedoc """
  ```edgeql
  scalar type codegen::DatetimeType extending std::datetime
  ```
  """
  @type codegen__datetime_type() :: DateTime.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CfgMemoryType extending cfg::memory
  ```
  """
  @type codegen__cfg_memory_type() :: EdgeDB.ConfigMemory.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalRelativeDurationType extending cal::relative_duration
  ```
  """
  @type codegen__cal_relative_duration_type() :: EdgeDB.RelativeDuration.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalTimeType extending cal::local_time
  ```
  """
  @type codegen__cal_local_time_type() :: Time.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalDatetimeType extending cal::local_datetime
  ```
  """
  @type codegen__cal_local_datetime_type() :: NaiveDateTime.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalDateType extending cal::local_date
  ```
  """
  @type codegen__cal_local_date_type() :: Date.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalDateDurationType extending cal::date_duration
  ```
  """
  @type codegen__cal_date_duration_type() :: EdgeDB.DateDuration.t()

  @typedoc """
  ```edgeql
  scalar type codegen::BytesType extending std::bytes
  ```
  """
  @type codegen__bytes_type() :: bitstring()

  @typedoc """
  ```edgeql
  scalar type codegen::BoolType extending std::bool
  ```
  """
  @type codegen__bool_type() :: boolean()

  @type result() :: [
          %{
            id: uuid(),
            rp_str: String.t(),
            op_str: String.t() | nil,
            mp_str: [String.t()],
            rp_str_type: codegen__str_type(),
            op_str_type: codegen__str_type() | nil,
            mp_str_type: [codegen__str_type()],
            rp_bool: boolean(),
            op_bool: boolean() | nil,
            mp_bool: [boolean()],
            rp_bool_type: codegen__bool_type(),
            op_bool_type: codegen__bool_type() | nil,
            mp_bool_type: [codegen__bool_type()],
            rp_int16: integer(),
            op_int16: integer() | nil,
            mp_int16: [integer()],
            rp_int16_type: codegen__int16_type(),
            op_int16_type: codegen__int16_type() | nil,
            mp_int16_type: [codegen__int16_type()],
            rp_int32: integer(),
            op_int32: integer() | nil,
            mp_int32: [integer()],
            rp_int32_type: codegen__int32_type(),
            op_int32_type: codegen__int32_type() | nil,
            mp_int32_type: [codegen__int32_type()],
            rp_int64: integer(),
            op_int64: integer() | nil,
            mp_int64: [integer()],
            rp_int64_type: codegen__int64_type(),
            op_int64_type: codegen__int64_type() | nil,
            mp_int64_type: [codegen__int64_type()],
            rp_float32: float(),
            op_float32: float() | nil,
            mp_float32: [float()],
            rp_float32_type: codegen__float32_type(),
            op_float32_type: codegen__float32_type() | nil,
            mp_float32_type: [codegen__float32_type()],
            rp_float64: float(),
            op_float64: float() | nil,
            mp_float64: [float()],
            rp_float64_type: codegen__float64_type(),
            op_float64_type: codegen__float64_type() | nil,
            mp_float64_type: [codegen__float64_type()],
            rp_decimal: Decimal.t(),
            op_decimal: Decimal.t() | nil,
            mp_decimal: [Decimal.t()],
            rp_decimal_type: codegen__decimal_type(),
            op_decimal_type: codegen__decimal_type() | nil,
            mp_decimal_type: [codegen__decimal_type()],
            rp_json: json(),
            op_json: json() | nil,
            mp_json: [json()],
            rp_json_type: codegen__json_type(),
            op_json_type: codegen__json_type() | nil,
            mp_json_type: [codegen__json_type()],
            rp_uuid: uuid(),
            op_uuid: uuid() | nil,
            mp_uuid: [uuid()],
            rp_uuid_type: codegen__uuid_type(),
            op_uuid_type: codegen__uuid_type() | nil,
            mp_uuid_type: [codegen__uuid_type()],
            rp_enum: codegen__enum_type(),
            op_enum: codegen__enum_type() | nil,
            mp_enum: [codegen__enum_type()],
            rp_datetime: DateTime.t(),
            op_datetime: DateTime.t() | nil,
            mp_datetime: [DateTime.t()],
            rp_datetime_type: codegen__datetime_type(),
            op_datetime_type: codegen__datetime_type() | nil,
            mp_datetime_type: [codegen__datetime_type()],
            rp_duration: duration(),
            op_duration: duration() | nil,
            mp_duration: [duration()],
            rp_duration_type: codegen__duration_type(),
            op_duration_type: codegen__duration_type() | nil,
            mp_duration_type: [codegen__duration_type()],
            rp_cal_local_datetime: NaiveDateTime.t(),
            op_cal_local_datetime: NaiveDateTime.t() | nil,
            mp_cal_local_datetime: [NaiveDateTime.t()],
            rp_cal_local_datetime_type: codegen__cal_local_datetime_type(),
            op_cal_local_datetime_type: codegen__cal_local_datetime_type() | nil,
            mp_cal_local_datetime_type: [codegen__cal_local_datetime_type()],
            rp_cal_local_date: Date.t(),
            op_cal_local_date: Date.t() | nil,
            mp_cal_local_date: [Date.t()],
            rp_cal_local_date_type: codegen__cal_local_date_type(),
            op_cal_local_date_type: codegen__cal_local_date_type() | nil,
            mp_cal_local_date_type: [codegen__cal_local_date_type()],
            rp_cal_local_time: Time.t(),
            op_cal_local_time: Time.t() | nil,
            mp_cal_local_time: [Time.t()],
            rp_cal_local_time_type: codegen__cal_local_time_type(),
            op_cal_local_time_type: codegen__cal_local_time_type() | nil,
            mp_cal_local_time_type: [codegen__cal_local_time_type()],
            rp_cal_relative_duration: EdgeDB.RelativeDuration.t(),
            op_cal_relative_duration: EdgeDB.RelativeDuration.t() | nil,
            mp_cal_relative_duration: [EdgeDB.RelativeDuration.t()],
            rp_cal_relative_duration_type: codegen__cal_relative_duration_type(),
            op_cal_relative_duration_type: codegen__cal_relative_duration_type() | nil,
            mp_cal_relative_duration_type: [codegen__cal_relative_duration_type()],
            rp_cal_date_duration: EdgeDB.DateDuration.t(),
            op_cal_date_duration: EdgeDB.DateDuration.t() | nil,
            mp_cal_date_duration: [EdgeDB.DateDuration.t()],
            rp_cal_date_duration_type: codegen__cal_date_duration_type(),
            op_cal_date_duration_type: codegen__cal_date_duration_type() | nil,
            mp_cal_date_duration_type: [codegen__cal_date_duration_type()],
            rp_array_int64: [integer()],
            op_array_int64: [integer()] | nil,
            mp_array_int64: [[integer()]],
            rp_tuple_int64_int64: {integer(), integer()},
            op_tuple_int64_int64: {integer(), integer()} | nil,
            mp_tuple_int64_int64: [{integer(), integer()}],
            rp_named_tuple_x_int64_y_int64: %{
              :x => integer(),
              0 => integer(),
              :y => integer(),
              1 => integer()
            },
            op_named_tuple_x_int64_y_int64:
              %{:x => integer(), 0 => integer(), :y => integer(), 1 => integer()} | nil,
            mp_named_tuple_x_int64_y_int64: [
              %{:x => integer(), 0 => integer(), :y => integer(), 1 => integer()}
            ],
            rp_range_int32: EdgeDB.Range.t(integer()),
            op_range_int32: EdgeDB.Range.t(integer()) | nil,
            mp_range_int32: [EdgeDB.Range.t(integer())],
            rp_range_int64: EdgeDB.Range.t(integer()),
            op_range_int64: EdgeDB.Range.t(integer()) | nil,
            mp_range_int64: [EdgeDB.Range.t(integer())],
            rp_range_float32: EdgeDB.Range.t(float()),
            op_range_float32: EdgeDB.Range.t(float()) | nil,
            mp_range_float32: [EdgeDB.Range.t(float())],
            rp_range_float64: EdgeDB.Range.t(float()),
            op_range_float64: EdgeDB.Range.t(float()) | nil,
            mp_range_float64: [EdgeDB.Range.t(float())],
            rp_range_decimal: EdgeDB.Range.t(Decimal.t()),
            op_range_decimal: EdgeDB.Range.t(Decimal.t()) | nil,
            mp_range_decimal: [EdgeDB.Range.t(Decimal.t())],
            rp_range_datetime: EdgeDB.Range.t(DateTime.t()),
            op_range_datetime: EdgeDB.Range.t(DateTime.t()) | nil,
            mp_range_datetime: [EdgeDB.Range.t(DateTime.t())],
            rp_range_cal_local_datetime: EdgeDB.Range.t(NaiveDateTime.t()),
            op_range_cal_local_datetime: EdgeDB.Range.t(NaiveDateTime.t()) | nil,
            mp_range_cal_local_datetime: [EdgeDB.Range.t(NaiveDateTime.t())],
            rp_range_cal_local_date: EdgeDB.Range.t(Date.t()),
            op_range_cal_local_date: EdgeDB.Range.t(Date.t()) | nil,
            mp_range_cal_local_date: [EdgeDB.Range.t(Date.t())],
            rp_bytes: bitstring(),
            op_bytes: bitstring() | nil,
            mp_bytes: [bitstring()],
            rp_bytes_type: codegen__bytes_type(),
            op_bytes_type: codegen__bytes_type() | nil,
            mp_bytes_type: [codegen__bytes_type()],
            rp_sequence: codegen__sequence_type(),
            op_sequence: codegen__sequence_type() | nil,
            mp_sequence: [codegen__sequence_type()],
            rp_cfg_memory: EdgeDB.ConfigMemory.t(),
            op_cfg_memory: EdgeDB.ConfigMemory.t() | nil,
            mp_cfg_memory: [EdgeDB.ConfigMemory.t()],
            rp_cfg_memory_type: codegen__cfg_memory_type(),
            op_cfg_memory_type: codegen__cfg_memory_type() | nil,
            mp_cfg_memory_type: [codegen__cfg_memory_type()],
            rl_f: %{
              id: uuid(),
              rp_a_str: String.t(),
              rp_b_str: String.t(),
              rp_c_str: String.t(),
              rp_d_str: String.t(),
              rp_f_str: String.t(),
              ol_a: %{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()} | nil,
              ml_a: [%{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()}],
              ol_a_b: %{id: uuid()} | nil,
              ml_a_b: [%{id: uuid()}]
            },
            ol_f:
              %{
                id: uuid(),
                rp_a_str: String.t(),
                rp_b_str: String.t(),
                rp_c_str: String.t(),
                rp_d_str: String.t(),
                rp_f_str: String.t(),
                ol_a: %{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()} | nil,
                ml_a: [%{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()}],
                ol_a_b: %{id: uuid()} | nil,
                ml_a_b: [%{id: uuid()}]
              }
              | nil,
            ml_f: [
              %{
                id: uuid(),
                rp_a_str: String.t(),
                rp_b_str: String.t(),
                rp_c_str: String.t(),
                rp_d_str: String.t(),
                rp_f_str: String.t(),
                ol_a: %{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()} | nil,
                ml_a: [%{id: uuid(), rp_a_str: String.t(), rp_e_str: String.t()}],
                ol_a_b: %{id: uuid()} | nil,
                ml_a_b: [%{id: uuid()}]
              }
            ],
            rl_lp_f: %{id: uuid(), "@olp_a": integer() | nil}
          }
        ]

  @type keyword_args() :: [{:ids, [uuid()]}]

  @type map_args() :: %{
          ids: [uuid()]
        }

  @type args() :: map_args() | keyword_args()

  @doc """
  Run the query.
  """
  @spec query(
          client :: EdgeDB.client(),
          args :: args(),
          opts :: list(EdgeDB.query_option())
        ) ::
          {:ok, result()}
          | {:error, reason}
        when reason: any()
  def query(client, args, opts \\ []) do
    do_query(client, args, opts)
  end

  @doc """
  Run the query.
  """
  @spec query!(
          client :: EdgeDB.client(),
          args :: args(),
          opts :: list(EdgeDB.query_option())
        ) :: result()
  def query!(client, args, opts \\ []) do
    case do_query(client, args, opts) do
      {:ok, result} ->
        result

      {:error, exc} ->
        raise exc
    end
  end

  @schema [
    :rp_uuid_type,
    :rp_uuid,
    :rp_tuple_int64_int64,
    :rp_str_type,
    :rp_str,
    :rp_sequence,
    :rp_range_int64,
    :rp_range_int32,
    :rp_range_float64,
    :rp_range_float32,
    :rp_range_decimal,
    :rp_range_datetime,
    :rp_range_cal_local_datetime,
    :rp_range_cal_local_date,
    :rp_json_type,
    :rp_json,
    :rp_int64_type,
    :rp_int64,
    :rp_int32_type,
    :rp_int32,
    :rp_int16_type,
    :rp_int16,
    :rp_float64_type,
    :rp_float64,
    :rp_float32_type,
    :rp_float32,
    :rp_enum,
    :rp_duration_type,
    :rp_duration,
    :rp_decimal_type,
    :rp_decimal,
    :rp_datetime_type,
    :rp_datetime,
    :rp_cfg_memory_type,
    :rp_cfg_memory,
    :rp_cal_relative_duration_type,
    :rp_cal_relative_duration,
    :rp_cal_local_time_type,
    :rp_cal_local_time,
    :rp_cal_local_datetime_type,
    :rp_cal_local_datetime,
    :rp_cal_local_date_type,
    :rp_cal_local_date,
    :rp_cal_date_duration_type,
    :rp_cal_date_duration,
    :rp_bytes_type,
    :rp_bytes,
    :rp_bool_type,
    :rp_bool,
    :rp_array_int64,
    :op_uuid_type,
    :op_uuid,
    :op_tuple_int64_int64,
    :op_str_type,
    :op_str,
    :op_sequence,
    :op_range_int64,
    :op_range_int32,
    :op_range_float64,
    :op_range_float32,
    :op_range_decimal,
    :op_range_datetime,
    :op_range_cal_local_datetime,
    :op_range_cal_local_date,
    :op_json_type,
    :op_json,
    :op_int64_type,
    :op_int64,
    :op_int32_type,
    :op_int32,
    :op_int16_type,
    :op_int16,
    :op_float64_type,
    :op_float64,
    :op_float32_type,
    :op_float32,
    :op_enum,
    :op_duration_type,
    :op_duration,
    :op_decimal_type,
    :op_decimal,
    :op_datetime_type,
    :op_datetime,
    :op_cfg_memory_type,
    :op_cfg_memory,
    :op_cal_relative_duration_type,
    :op_cal_relative_duration,
    :op_cal_local_time_type,
    :op_cal_local_time,
    :op_cal_local_datetime_type,
    :op_cal_local_datetime,
    :op_cal_local_date_type,
    :op_cal_local_date,
    :op_cal_date_duration_type,
    :op_cal_date_duration,
    :op_bytes_type,
    :op_bytes,
    :op_bool_type,
    :op_bool,
    :op_array_int64,
    :mp_uuid_type,
    :mp_uuid,
    :mp_tuple_int64_int64,
    :mp_str_type,
    :mp_str,
    :mp_sequence,
    :mp_range_int64,
    :mp_range_int32,
    :mp_range_float64,
    :mp_range_float32,
    :mp_range_decimal,
    :mp_range_datetime,
    :mp_range_cal_local_datetime,
    :mp_range_cal_local_date,
    :mp_json_type,
    :mp_json,
    :mp_int64_type,
    :mp_int64,
    :mp_int32_type,
    :mp_int32,
    :mp_int16_type,
    :mp_int16,
    :mp_float64_type,
    :mp_float64,
    :mp_float32_type,
    :mp_float32,
    :mp_enum,
    :mp_duration_type,
    :mp_duration,
    :mp_decimal_type,
    :mp_decimal,
    :mp_datetime_type,
    :mp_datetime,
    :mp_cfg_memory_type,
    :mp_cfg_memory,
    :mp_cal_relative_duration_type,
    :mp_cal_relative_duration,
    :mp_cal_local_time_type,
    :mp_cal_local_time,
    :mp_cal_local_datetime_type,
    :mp_cal_local_datetime,
    :mp_cal_local_date_type,
    :mp_cal_local_date,
    :mp_cal_date_duration_type,
    :mp_cal_date_duration,
    :mp_bytes_type,
    :mp_bytes,
    :mp_bool_type,
    :mp_bool,
    :mp_array_int64,
    :id,
    rp_named_tuple_x_int64_y_int64: [:y, :x],
    rl_lp_f: [:olp_a, :id],
    rl_f: [
      :rp_f_str,
      :rp_d_str,
      :rp_c_str,
      :rp_b_str,
      :rp_a_str,
      :id,
      ol_a_b: [:id],
      ol_a: [:rp_e_str, :rp_a_str, :id],
      ml_a_b: [:id],
      ml_a: [:rp_e_str, :rp_a_str, :id]
    ],
    op_named_tuple_x_int64_y_int64: [:y, :x],
    ol_f: [
      :rp_f_str,
      :rp_d_str,
      :rp_c_str,
      :rp_b_str,
      :rp_a_str,
      :id,
      ol_a_b: [:id],
      ol_a: [:rp_e_str, :rp_a_str, :id],
      ml_a_b: [:id],
      ml_a: [:rp_e_str, :rp_a_str, :id]
    ],
    mp_named_tuple_x_int64_y_int64: [:y, :x],
    ml_f: [
      :rp_f_str,
      :rp_d_str,
      :rp_c_str,
      :rp_b_str,
      :rp_a_str,
      :id,
      ol_a_b: [:id],
      ol_a: [:rp_e_str, :rp_a_str, :id],
      ml_a_b: [:id],
      ml_a: [:rp_e_str, :rp_a_str, :id]
    ]
  ]
  defp do_query(client, args, opts) do
    opts = Keyword.merge(opts, __file__: @query_file, __transform_result__: [schema: @schema])
    EdgeDB.query(client, @query, args, opts)
  end
end

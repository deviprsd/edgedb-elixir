# AUTOGENERATED: DO NOT MODIFY
# Generated by Elixir client for EdgeDB via `mix edgedb.generate` from
#   `test/support/codegen/edgeql/standart/select_standart_types_positional.edgeql`.
defmodule Tests.Codegen.Queries.Standart.SelectStandartTypesPositional do
  @query """
  select {
      # string
      cp_str := <str>$0,
      cp_str_type := <codegen::StrType>$1,

      cp_bool := <bool>$2,
      cp_bool_type := <codegen::BoolType>$3,

      cp_int16 := <int16>$4,
      cp_int16_type := <codegen::Int16Type>$5,

      cp_int32 := <int32>$6,
      cp_int32_type := <codegen::Int32Type>$7,

      cp_int64 := <int64>$8,
      cp_int64_type := <codegen::Int64Type>$9,

      cp_float32 := <float32>$10,
      cp_float32_type := <codegen::Float32Type>$11,

      cp_float64 := <float64>$12,
      cp_float64_type := <codegen::Float64Type>$13,

      cp_decimal := <decimal>$14,
      cp_decimal_type := <codegen::DecimalType>$15,

      # json

      cp_json := <json>$16,
      cp_json_type := <codegen::JsonType>$17,

      # uuid

      cp_uuid := <uuid>$18,
      cp_uuid_type := <codegen::UuidType>$19,

      # enum

      cp_enum := <codegen::EnumType>$20,

      # date/time

      cp_datetime := <datetime>$21,
      cp_datetime_type := <codegen::DatetimeType>$22,

      cp_duration := <duration>$23,
      cp_duration_type := <codegen::DurationType>$24,

      cp_cal_local_datetime := <cal::local_datetime>$25,
      cp_cal_local_datetime_type := <codegen::CalLocalDatetimeType>$26,

      cp_cal_local_date := <cal::local_date>$27,
      cp_cal_local_date_type := <codegen::CalLocalDateType>$28,

      cp_cal_local_time := <cal::local_time>$29,
      cp_cal_local_time_type := <codegen::CalLocalTimeType>$30,

      cp_cal_relative_duration := <cal::relative_duration>$31,
      cp_cal_relative_duration_type := <codegen::CalRelativeDurationType>$32,

      cp_cal_date_duration := <cal::date_duration>$33,
      cp_cal_date_duration_type := <codegen::CalDateDurationType>$34,

      # array

      cp_array_int64 := <array<int64>>$35,

      # range

      cp_range_int32 := <range<int32>>$36,

      cp_range_int64 := <range<int64>>$37,

      cp_range_float32 := <range<float32>>$38,

      cp_range_float64 := <range<float64>>$39,

      cp_range_decimal := <range<decimal>>$40,

      cp_range_datetime := <range<datetime>>$41,

      cp_range_cal_local_datetime := <range<cal::local_datetime>>$42,

      cp_range_cal_local_date := <range<cal::local_date>>$43,

      # bytes

      cp_bytes := <bytes>$44,
      cp_bytes_type := <codegen::BytesType>$45,

      # config

      cp_cfg_memory := <cfg::memory>$46,
      cp_cfg_memory_type := <codegen::CfgMemoryType>$47,
  }
  """

  @moduledoc """
  Generated module for the EdgeQL query from
    `test/support/codegen/edgeql/standart/select_standart_types_positional.edgeql`.

  Query:

  ```edgeql
  #{@query}
  ```
  """

  @query_file "test/support/codegen/edgeql/standart/select_standart_types_positional.edgeql"

  @typedoc """
  ```edgeql
  std::uuid
  ```
  """
  @type uuid() :: binary()

  @typedoc """
  ```edgeql
  std::json
  ```
  """
  @type json() :: any()

  @typedoc """
  ```edgeql
  std::duration
  ```
  """
  @type duration() :: Timex.Duration.t() | integer()

  @typedoc """
  ```edgeql
  scalar type codegen::UuidType extending std::uuid
  ```
  """
  @type codegen__uuid_type() :: binary()

  @typedoc """
  ```edgeql
  scalar type codegen::StrType extending std::str
  ```
  """
  @type codegen__str_type() :: String.t()

  @typedoc """
  ```edgeql
  scalar type codegen::JsonType extending std::json
  ```
  """
  @type codegen__json_type() :: any()

  @typedoc """
  ```edgeql
  scalar type codegen::Int64Type extending std::int64
  ```
  """
  @type codegen__int64_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Int32Type extending std::int32
  ```
  """
  @type codegen__int32_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Int16Type extending std::int16
  ```
  """
  @type codegen__int16_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::Float64Type extending std::float64
  ```
  """
  @type codegen__float64_type() :: float()

  @typedoc """
  ```edgeql
  scalar type codegen::Float32Type extending std::float32
  ```
  """
  @type codegen__float32_type() :: float()

  @typedoc """
  ```edgeql
  scalar type codegen::EnumType extending enum<A, B, C>
  ```
  """
  @type codegen__enum_type() :: String.t() | :A | :B | :C

  @typedoc """
  ```edgeql
  scalar type codegen::DurationType extending std::duration
  ```
  """
  @type codegen__duration_type() :: integer()

  @typedoc """
  ```edgeql
  scalar type codegen::DecimalType extending std::decimal
  ```
  """
  @type codegen__decimal_type() :: Decimal.t()

  @typedoc """
  ```edgeql
  scalar type codegen::DatetimeType extending std::datetime
  ```
  """
  @type codegen__datetime_type() :: DateTime.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CfgMemoryType extending cfg::memory
  ```
  """
  @type codegen__cfg_memory_type() :: EdgeDB.ConfigMemory.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalRelativeDurationType extending cal::relative_duration
  ```
  """
  @type codegen__cal_relative_duration_type() :: EdgeDB.RelativeDuration.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalTimeType extending cal::local_time
  ```
  """
  @type codegen__cal_local_time_type() :: Time.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalDatetimeType extending cal::local_datetime
  ```
  """
  @type codegen__cal_local_datetime_type() :: NaiveDateTime.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalLocalDateType extending cal::local_date
  ```
  """
  @type codegen__cal_local_date_type() :: Date.t()

  @typedoc """
  ```edgeql
  scalar type codegen::CalDateDurationType extending cal::date_duration
  ```
  """
  @type codegen__cal_date_duration_type() :: EdgeDB.DateDuration.t()

  @typedoc """
  ```edgeql
  scalar type codegen::BytesType extending std::bytes
  ```
  """
  @type codegen__bytes_type() :: bitstring()

  @typedoc """
  ```edgeql
  scalar type codegen::BoolType extending std::bool
  ```
  """
  @type codegen__bool_type() :: boolean()

  @type result() :: %{
          cp_str: String.t(),
          cp_str_type: codegen__str_type(),
          cp_bool: boolean(),
          cp_bool_type: codegen__bool_type(),
          cp_int16: integer(),
          cp_int16_type: codegen__int16_type(),
          cp_int32: integer(),
          cp_int32_type: codegen__int32_type(),
          cp_int64: integer(),
          cp_int64_type: codegen__int64_type(),
          cp_float32: float(),
          cp_float32_type: codegen__float32_type(),
          cp_float64: float(),
          cp_float64_type: codegen__float64_type(),
          cp_decimal: Decimal.t(),
          cp_decimal_type: codegen__decimal_type(),
          cp_json: json(),
          cp_json_type: codegen__json_type(),
          cp_uuid: uuid(),
          cp_uuid_type: codegen__uuid_type(),
          cp_enum: codegen__enum_type(),
          cp_datetime: DateTime.t(),
          cp_datetime_type: codegen__datetime_type(),
          cp_duration: duration(),
          cp_duration_type: codegen__duration_type(),
          cp_cal_local_datetime: NaiveDateTime.t(),
          cp_cal_local_datetime_type: codegen__cal_local_datetime_type(),
          cp_cal_local_date: Date.t(),
          cp_cal_local_date_type: codegen__cal_local_date_type(),
          cp_cal_local_time: Time.t(),
          cp_cal_local_time_type: codegen__cal_local_time_type(),
          cp_cal_relative_duration: EdgeDB.RelativeDuration.t(),
          cp_cal_relative_duration_type: codegen__cal_relative_duration_type(),
          cp_cal_date_duration: EdgeDB.DateDuration.t(),
          cp_cal_date_duration_type: codegen__cal_date_duration_type(),
          cp_array_int64: [integer()],
          cp_range_int32: EdgeDB.Range.t(integer()),
          cp_range_int64: EdgeDB.Range.t(integer()),
          cp_range_float32: EdgeDB.Range.t(float()),
          cp_range_float64: EdgeDB.Range.t(float()),
          cp_range_decimal: EdgeDB.Range.t(Decimal.t()),
          cp_range_datetime: EdgeDB.Range.t(DateTime.t()),
          cp_range_cal_local_datetime: EdgeDB.Range.t(NaiveDateTime.t()),
          cp_range_cal_local_date: EdgeDB.Range.t(Date.t()),
          cp_bytes: bitstring(),
          cp_bytes_type: codegen__bytes_type(),
          cp_cfg_memory: EdgeDB.ConfigMemory.t(),
          cp_cfg_memory_type: codegen__cfg_memory_type()
        }

  @doc """
  Run the query.
  """
  @spec query(
          client :: EdgeDB.client(),
          arg_0 :: String.t(),
          arg_1 :: codegen__str_type(),
          arg_2 :: boolean(),
          arg_3 :: codegen__bool_type(),
          arg_4 :: integer(),
          arg_5 :: codegen__int16_type(),
          arg_6 :: integer(),
          arg_7 :: codegen__int32_type(),
          arg_8 :: integer(),
          arg_9 :: codegen__int64_type(),
          arg_10 :: float(),
          arg_11 :: codegen__float32_type(),
          arg_12 :: float(),
          arg_13 :: codegen__float64_type(),
          arg_14 :: Decimal.t(),
          arg_15 :: codegen__decimal_type(),
          arg_16 :: json(),
          arg_17 :: codegen__json_type(),
          arg_18 :: uuid(),
          arg_19 :: codegen__uuid_type(),
          arg_20 :: codegen__enum_type(),
          arg_21 :: DateTime.t(),
          arg_22 :: codegen__datetime_type(),
          arg_23 :: duration(),
          arg_24 :: codegen__duration_type(),
          arg_25 :: NaiveDateTime.t(),
          arg_26 :: codegen__cal_local_datetime_type(),
          arg_27 :: Date.t(),
          arg_28 :: codegen__cal_local_date_type(),
          arg_29 :: Time.t(),
          arg_30 :: codegen__cal_local_time_type(),
          arg_31 :: EdgeDB.RelativeDuration.t(),
          arg_32 :: codegen__cal_relative_duration_type(),
          arg_33 :: EdgeDB.DateDuration.t(),
          arg_34 :: codegen__cal_date_duration_type(),
          arg_35 :: [integer()],
          arg_36 :: EdgeDB.Range.t(integer()),
          arg_37 :: EdgeDB.Range.t(integer()),
          arg_38 :: EdgeDB.Range.t(float()),
          arg_39 :: EdgeDB.Range.t(float()),
          arg_40 :: EdgeDB.Range.t(Decimal.t()),
          arg_41 :: EdgeDB.Range.t(DateTime.t()),
          arg_42 :: EdgeDB.Range.t(NaiveDateTime.t()),
          arg_43 :: EdgeDB.Range.t(Date.t()),
          arg_44 :: bitstring(),
          arg_45 :: codegen__bytes_type(),
          arg_46 :: EdgeDB.ConfigMemory.t(),
          arg_47 :: codegen__cfg_memory_type(),
          opts :: list(EdgeDB.query_option())
        ) ::
          {:ok, result()}
          | {:error, reason}
        when reason: any()
  def query(
        client,
        arg_0,
        arg_1,
        arg_2,
        arg_3,
        arg_4,
        arg_5,
        arg_6,
        arg_7,
        arg_8,
        arg_9,
        arg_10,
        arg_11,
        arg_12,
        arg_13,
        arg_14,
        arg_15,
        arg_16,
        arg_17,
        arg_18,
        arg_19,
        arg_20,
        arg_21,
        arg_22,
        arg_23,
        arg_24,
        arg_25,
        arg_26,
        arg_27,
        arg_28,
        arg_29,
        arg_30,
        arg_31,
        arg_32,
        arg_33,
        arg_34,
        arg_35,
        arg_36,
        arg_37,
        arg_38,
        arg_39,
        arg_40,
        arg_41,
        arg_42,
        arg_43,
        arg_44,
        arg_45,
        arg_46,
        arg_47,
        opts \\ []
      ) do
    args = [
      arg_0,
      arg_1,
      arg_2,
      arg_3,
      arg_4,
      arg_5,
      arg_6,
      arg_7,
      arg_8,
      arg_9,
      arg_10,
      arg_11,
      arg_12,
      arg_13,
      arg_14,
      arg_15,
      arg_16,
      arg_17,
      arg_18,
      arg_19,
      arg_20,
      arg_21,
      arg_22,
      arg_23,
      arg_24,
      arg_25,
      arg_26,
      arg_27,
      arg_28,
      arg_29,
      arg_30,
      arg_31,
      arg_32,
      arg_33,
      arg_34,
      arg_35,
      arg_36,
      arg_37,
      arg_38,
      arg_39,
      arg_40,
      arg_41,
      arg_42,
      arg_43,
      arg_44,
      arg_45,
      arg_46,
      arg_47
    ]

    do_query(client, args, opts)
  end

  @doc """
  Run the query.
  """
  @spec query!(
          client :: EdgeDB.client(),
          arg_0 :: String.t(),
          arg_1 :: codegen__str_type(),
          arg_2 :: boolean(),
          arg_3 :: codegen__bool_type(),
          arg_4 :: integer(),
          arg_5 :: codegen__int16_type(),
          arg_6 :: integer(),
          arg_7 :: codegen__int32_type(),
          arg_8 :: integer(),
          arg_9 :: codegen__int64_type(),
          arg_10 :: float(),
          arg_11 :: codegen__float32_type(),
          arg_12 :: float(),
          arg_13 :: codegen__float64_type(),
          arg_14 :: Decimal.t(),
          arg_15 :: codegen__decimal_type(),
          arg_16 :: json(),
          arg_17 :: codegen__json_type(),
          arg_18 :: uuid(),
          arg_19 :: codegen__uuid_type(),
          arg_20 :: codegen__enum_type(),
          arg_21 :: DateTime.t(),
          arg_22 :: codegen__datetime_type(),
          arg_23 :: duration(),
          arg_24 :: codegen__duration_type(),
          arg_25 :: NaiveDateTime.t(),
          arg_26 :: codegen__cal_local_datetime_type(),
          arg_27 :: Date.t(),
          arg_28 :: codegen__cal_local_date_type(),
          arg_29 :: Time.t(),
          arg_30 :: codegen__cal_local_time_type(),
          arg_31 :: EdgeDB.RelativeDuration.t(),
          arg_32 :: codegen__cal_relative_duration_type(),
          arg_33 :: EdgeDB.DateDuration.t(),
          arg_34 :: codegen__cal_date_duration_type(),
          arg_35 :: [integer()],
          arg_36 :: EdgeDB.Range.t(integer()),
          arg_37 :: EdgeDB.Range.t(integer()),
          arg_38 :: EdgeDB.Range.t(float()),
          arg_39 :: EdgeDB.Range.t(float()),
          arg_40 :: EdgeDB.Range.t(Decimal.t()),
          arg_41 :: EdgeDB.Range.t(DateTime.t()),
          arg_42 :: EdgeDB.Range.t(NaiveDateTime.t()),
          arg_43 :: EdgeDB.Range.t(Date.t()),
          arg_44 :: bitstring(),
          arg_45 :: codegen__bytes_type(),
          arg_46 :: EdgeDB.ConfigMemory.t(),
          arg_47 :: codegen__cfg_memory_type(),
          opts :: list(EdgeDB.query_option())
        ) :: result()
  def query!(
        client,
        arg_0,
        arg_1,
        arg_2,
        arg_3,
        arg_4,
        arg_5,
        arg_6,
        arg_7,
        arg_8,
        arg_9,
        arg_10,
        arg_11,
        arg_12,
        arg_13,
        arg_14,
        arg_15,
        arg_16,
        arg_17,
        arg_18,
        arg_19,
        arg_20,
        arg_21,
        arg_22,
        arg_23,
        arg_24,
        arg_25,
        arg_26,
        arg_27,
        arg_28,
        arg_29,
        arg_30,
        arg_31,
        arg_32,
        arg_33,
        arg_34,
        arg_35,
        arg_36,
        arg_37,
        arg_38,
        arg_39,
        arg_40,
        arg_41,
        arg_42,
        arg_43,
        arg_44,
        arg_45,
        arg_46,
        arg_47,
        opts \\ []
      ) do
    args = [
      arg_0,
      arg_1,
      arg_2,
      arg_3,
      arg_4,
      arg_5,
      arg_6,
      arg_7,
      arg_8,
      arg_9,
      arg_10,
      arg_11,
      arg_12,
      arg_13,
      arg_14,
      arg_15,
      arg_16,
      arg_17,
      arg_18,
      arg_19,
      arg_20,
      arg_21,
      arg_22,
      arg_23,
      arg_24,
      arg_25,
      arg_26,
      arg_27,
      arg_28,
      arg_29,
      arg_30,
      arg_31,
      arg_32,
      arg_33,
      arg_34,
      arg_35,
      arg_36,
      arg_37,
      arg_38,
      arg_39,
      arg_40,
      arg_41,
      arg_42,
      arg_43,
      arg_44,
      arg_45,
      arg_46,
      arg_47
    ]

    case do_query(client, args, opts) do
      {:ok, result} ->
        result

      {:error, exc} ->
        raise exc
    end
  end

  @schema [
    :cp_uuid_type,
    :cp_uuid,
    :cp_str_type,
    :cp_str,
    :cp_range_int64,
    :cp_range_int32,
    :cp_range_float64,
    :cp_range_float32,
    :cp_range_decimal,
    :cp_range_datetime,
    :cp_range_cal_local_datetime,
    :cp_range_cal_local_date,
    :cp_json_type,
    :cp_json,
    :cp_int64_type,
    :cp_int64,
    :cp_int32_type,
    :cp_int32,
    :cp_int16_type,
    :cp_int16,
    :cp_float64_type,
    :cp_float64,
    :cp_float32_type,
    :cp_float32,
    :cp_enum,
    :cp_duration_type,
    :cp_duration,
    :cp_decimal_type,
    :cp_decimal,
    :cp_datetime_type,
    :cp_datetime,
    :cp_cfg_memory_type,
    :cp_cfg_memory,
    :cp_cal_relative_duration_type,
    :cp_cal_relative_duration,
    :cp_cal_local_time_type,
    :cp_cal_local_time,
    :cp_cal_local_datetime_type,
    :cp_cal_local_datetime,
    :cp_cal_local_date_type,
    :cp_cal_local_date,
    :cp_cal_date_duration_type,
    :cp_cal_date_duration,
    :cp_bytes_type,
    :cp_bytes,
    :cp_bool_type,
    :cp_bool,
    :cp_array_int64
  ]
  defp do_query(client, args, opts) do
    opts = Keyword.merge(opts, __file__: @query_file, __transform_result__: [schema: @schema])
    EdgeDB.query_required_single(client, @query, args, opts)
  end
end

name: Tests

on: push

# TODO:
# 1. install EdgeDB CLI with normal action
# 2. create users in the right way, not like in the current nightmare

env:
  EDGEDB_DSN: edgedb://edgedb:edgedb@localhost:10700/edgedb

jobs:
  tests:
    name: Run tests (OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }})

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        otp: [23.2.1]
        elixir: [1.11]
        edgedb: [1-beta2]

    services:
      edgedb:
        image: edgedb/edgedb:${{ matrix.edgedb }}
        env:
          EDGEDB_USER: edgedb
          EDGEDB_PASSWORD: edgedb
        ports:
          - 10700:5656
        options: --health-cmd="edgedb -c 'SELECT 1;'" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      # TODO: make this properly
      - name: Install EdgeDB CLI
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.edgedb.com | bash -s -- -y

      - name: Create requried users and apply migrations
        run: |
          export PATH="$HOME/.edgedb/bin:$PATH"

          edgedb --dsn=$EDGEDB_DSN create-superuser-role edgedb_scram
          echo "edgedb" | edgedb --dsn=$EDGEDB_DSN alter-role --password-from-stdin edgedb_scram
          edgedb --dsn=$EDGEDB_DSN configure insert Auth --user=edgedb_scram --user=edgedb --method=SCRAM --priority=0

          edgedb --dsn=$EDGEDB_DSN create-superuser-role edgedb_trust
          edgedb --dsn=$EDGEDB_DSN configure insert Auth --user=edgedb_trust --method=Trust --priority=1

          edgedb --dsn=$EDGEDB_DSN migrate --quiet

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: tests-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}

      - name: Install dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.get --only test

      - name: Run tests
        run: mix coveralls
